.data

d0: .asciz "%i"
d1: .asciz "\n"
L1:
.text
.global main


main:
stmfd sp!,{v1,v2,v3,v4,v5,fp,lr}
add fp,sp,#24
sub sp,fp,#44
mov v1,#5
str v1,[fp,#-28]

.1:
mov v2,#0
str v2,[fp,#-36]
ldr v1,[fp,#-28]
ldr v2,[fp,#-36]			// this instruction is removed
cmp v1,v2
bgt ._t2_true_0
mov v3,#0
b ._t2_exit_0

._t2_true_0:
mvn v3,#0

._t2_exit_0:
str v3,[fp,#-40]
ldr v3,[fp,#-40]			// this instruction is removed
mvn v4,#0
cmp v3,v4
beq .2
b .3

.2:
ldr v1,[fp,#-28]
sub v5,v1,#1
str v5,[fp,#-44]
ldr v5,[fp,#-44]			// this instruction is removed
mov v1,v5
str v1,[fp,#-28]
stmfd sp!,{a1,a2,a3,a4}
ldr a1,=d0
mov a2,v1
bl printf
ldmfd sp!,{a1,a2,a3,a4}		// this instruction is removed
stmfd sp!,{a1,a2,a3,a4}		// this instruction is removed
ldr a1,=d1
mov a2,#0
bl printf
ldmfd sp!,{a1,a2,a3,a4}
b .1

.3:

.mainExit:
sub sp,fp,#24
ldmfd sp!,{v1,v2,v3,v4,v5,fp,pc}
